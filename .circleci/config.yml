version: 2.1

jobs:
  build-and-push:
    docker:
      - image: cimg/base:2023.03
    steps:
      - checkout
      - run:
          name: Setup Docker
          command: |
            curl -fsSL https://get.docker.com -o get-docker.sh
            sudo sh get-docker.sh
      - run:
          name: Build and push frontend image
          command: |
            cd frontend
            docker build -t $DOCKER_USERNAME/frontend:${CIRCLE_SHA1:0:7} .
            echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
            docker push $DOCKER_USERNAME/frontend:${CIRCLE_SHA1:0:7}
      - run:
          name: Build and push backend image
          command: |
            cd backend
            docker build -t $DOCKER_USERNAME/backend:${CIRCLE_SHA1:0:7} .
            docker push $DOCKER_USERNAME/backend:${CIRCLE_SHA1:0:7}

  deploy:
    docker:
      - image: cimg/python:3.10
    steps:
      - checkout
      - run:
          name: Install AWS CLI
          command: |
            pip install awscli
      - run:
          name: Configure AWS
          command: |
            aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
            aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
            aws configure set region eu-central-1
      - run:
          name: Install kubectl
          command: |
            curl -LO "https://dl.k8s.io/release/stable.txt"
            curl -LO "https://dl.k8s.io/release/$(cat stable.txt)/bin/linux/amd64/kubectl"
            chmod +x kubectl
            sudo mv kubectl /usr/local/bin/
      - run:
          name: Update kubeconfig
          command: |
            aws eks update-kubeconfig --name eks-nebulance --region eu-central-1
      - run:
          name: Install Helm
          command: |
            curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
      - run:
          name: Deploy with Helm
          command: |
            cd helm-charts
            helm upgrade --install eks-app . \
              --namespace eks-app \
              --create-namespace \
              --set frontend.image.tag=${CIRCLE_SHA1:0:7} \
              --set backend.image.tag=${CIRCLE_SHA1:0:7}

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build-and-push:
          context: docker-hub-creds
      - deploy:
          requires:
            - build-and-push
          context: aws-creds