apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "eks-app.fullname" . }}-postgresql
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "eks-app.labels" . | nindent 4 }}
    app.kubernetes.io/component: database
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "eks-app.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: database
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        {{- include "eks-app.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: database
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }}
      containers:
      - name: postgresql
        image: postgres:14-alpine
        imagePullPolicy: IfNotPresent
        ports:
        - name: postgres
          containerPort: 5432
          protocol: TCP
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.externalSecrets.secrets.database.name }}
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.externalSecrets.secrets.database.name }}
              key: password
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: {{ .Values.externalSecrets.secrets.database.name }}
              key: database
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - appuser
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - appuser
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        resources:
          {{- toYaml .Values.postgresql.resources | nindent 10 }}
        volumeMounts:
        - name: data
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: {{ include "eks-app.fullname" . }}-postgresql